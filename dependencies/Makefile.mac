
WEBOTS_HOME ?= ..
WEBOTS_DEPENDENCY_PATH ?= $(WEBOTS_HOME)/dependencies
WEBOTS_HOME_LIB = $(WEBOTS_HOME)/lib/webots

DEPENDENCIES_URL = https://cyberbotics.com/files/repository/dependencies/mac/release
DEPENDENCIES_URL_DEVELOP = https://cyberbotics.com/files/repository/dependencies/mac/release/develop

# Webots dependencies
QT_PACKAGE = qt-5.11.2-release.tar.bz2
ASSIMP_PACKAGE = assimp.tar.bz2
FREETYPE_PACKAGE = macos-precompiled-freetype-2.9.tar.bz2
FFMPEG_PACKAGE = ffmpeg.tar.bz2
LUA_PACKAGE = lua-5.2.3.tar.bz2
LUA_GD_PACKAGE = gd.tar.bz2
MINIGLU_PACKAGE = libminiglu.tar.gz
OIS_PACKAGE = libOIS.tar.bz2
OPENAL_PACKAGE = openal-mac-1.16.0.tar.bz2
OPENSSL_PACKAGE = openssl-1.0.2-precompiled.tar.bz2
PICO_PACKAGE = libpico.tar.bz2

# samples dependencies
OPENCV_PACKAGE = opencv-2.4.3.tar.bz2

# libController dependencies (static)
PNG_PACKAGE = libpng-1.0.12.tar.bz2
TIFF_PACKAGE = libtiff.tar.bz2
JPEG_PACKAGE = jpeg-9b.tar.bz2


PACKAGES = qt assimp freetype ffmpeg jpeg lua lua-gd miniglu ois openal opencv openssl pico png tiff
PACKAGES_CLEAN = $(addsuffix -clean, $(PACKAGES))

.PHONY: release debug distrib profile clean cleanse $(PACKAGES) $(PACKAGES_CLEAN)

release debug distrib profile: $(PACKAGES)
clean:
cleanse: $(PACKAGES_CLEAN)

qt-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE) $(WEBOTS_HOME)/Contents/Frameworks/Qt* $(WEBOTS_HOME_LIB)/qt $(WEBOTS_HOME)/include/qt $(WEBOTS_HOME)/bin/qt/lrelease $(WEBOTS_HOME)/bin/qt/lupdate $(WEBOTS_HOME)/bin/qt/moc $(WEBOTS_HOME)/resources/web/local/qwebchannel.js

qt: $(WEBOTS_HOME)/resources/web/local/qwebchannel.js

$(WEBOTS_HOME)/resources/web/local/qwebchannel.js: $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)
	tar xvjfm $(QT_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)
	wget $(DEPENDENCIES_URL_DEVELOP)/$(QT_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)


assimp-clean:
	rm -fr $(WEBOTS_DEPENDENCY_PATH)/assimp $(WEBOTS_HOME_LIB)/libassimp.dylib

assimp: $(WEBOTS_HOME_LIB)/libassimp.dylib

$(WEBOTS_HOME_LIB)/libassimp.dylib: $(WEBOTS_DEPENDENCY_PATH)/assimp
	cp $(WEBOTS_DEPENDENCY_PATH)/assimp/build/code/libassimp.dylib $(WEBOTS_HOME_LIB)

$(WEBOTS_DEPENDENCY_PATH)/assimp:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(ASSIMP_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(ASSIMP_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar xvjfm $(ASSIMP_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(ASSIMP_PACKAGE)


freetype-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/freetype-2.9

freetype: $(WEBOTS_DEPENDENCY_PATH)/freetype-2.9/objs/.libs/libfreetype.a

$(WEBOTS_DEPENDENCY_PATH)/freetype-2.9/objs/.libs/libfreetype.a:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FREETYPE_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(FREETYPE_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar jxf $(FREETYPE_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FREETYPE_PACKAGE)


ffmpeg-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE) $(WEBOTS_HOME)/util/ffmpeg

ffmpeg: $(WEBOTS_HOME)/util/ffmpeg

$(WEBOTS_HOME)/util/ffmpeg: $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)
	tar xvjfm $(FFMPEG_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(FFMPEG_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)


jpeg-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/jpeg-9b $(WEBOTS_HOME)/include/libjpeg

jpeg: $(WEBOTS_HOME)/include/libjpeg/jconfig.h

$(WEBOTS_HOME)/include/libjpeg/jconfig.h: $(WEBOTS_DEPENDENCY_PATH)/jpeg-9b
	mkdir -p $(WEBOTS_HOME)/include/libjpeg
	cp $(WEBOTS_DEPENDENCY_PATH)/jpeg-9b/*.h $(WEBOTS_HOME)/include/libjpeg/
	cp $(WEBOTS_DEPENDENCY_PATH)/jpeg-9b/build-x86_64/jconfig.h $(WEBOTS_HOME)/include/libjpeg/

$(WEBOTS_DEPENDENCY_PATH)/jpeg-9b:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(JPEG_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(JPEG_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar jxfm $(JPEG_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(JPEG_PACKAGE)


lua-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3 $(WEBOTS_HOME_LIB)/liblua.dylib

lua: $(WEBOTS_HOME_LIB)/liblua.dylib

$(WEBOTS_HOME_LIB)/liblua.dylib: $(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3
	cp $(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3/src/liblua.dylib $(WEBOTS_HOME_LIB)/liblua.dylib
	install_name_tool -id @rpath/lib/webots/liblua.dylib $(WEBOTS_HOME_LIB)/liblua.dylib

$(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(LUA_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar jxfm $(LUA_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE)


lua-gd-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE) $(WEBOTS_HOME_LIB)/libgd.3.dylib $(WEBOTS_HOME)/resources/lua/modules/gd/gd.dylib

lua-gd: $(WEBOTS_HOME)/resources/lua/modules/gd/gd.dylib

$(WEBOTS_HOME)/resources/lua/modules/gd/gd.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE)
	tar xvjfm $(LUA_GD_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE)
	wget $(DEPENDENCIES_URL_DEVELOP)/$(LUA_GD_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE)


miniglu-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0

miniglu: $(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0/libminiglu.a

$(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0/libminiglu.a:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(MINIGLU_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(MINIGLU_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar zxvf $(MINIGLU_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(MINIGLU_PACKAGE)


ois-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE) $(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0

ois: $(WEBOTS_HOME_LIB)/libOIS.dylib

$(WEBOTS_HOME_LIB)/libOIS.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)
	tar xvjfm $(OIS_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)
	wget $(DEPENDENCIES_URL_DEVELOP)/$(OIS_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)


openal-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/openal $(WEBOTS_HOME_LIB)/libopenal*.dylib

openal: $(WEBOTS_HOME_LIB)/libopenal.dylib

$(WEBOTS_HOME_LIB)/libopenal.dylib: $(WEBOTS_DEPENDENCY_PATH)/openal
	cp $(WEBOTS_DEPENDENCY_PATH)/openal/build/libopenal.1.16.0.dylib $(WEBOTS_HOME_LIB)
	mv $(WEBOTS_HOME_LIB)/libopenal.1.16.0.dylib $(WEBOTS_HOME_LIB)/libopenal.dylib
	install_name_tool -id @rpath/lib/webots/libopenal.dylib $(WEBOTS_HOME_LIB)/libopenal.dylib

$(WEBOTS_DEPENDENCY_PATH)/openal:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENAL_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(OPENAL_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar xvjfm $(OPENAL_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENAL_PACKAGE)


opencv-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(OPENCV_PACKAGE) $(WEBOTS_HOME_LIB)/libopencv_* $(WEBOTS_HOME)/include/opencv2

opencv: $(WEBOTS_HOME_LIB)/libopencv_core.2.4.3.dylib

$(WEBOTS_HOME_LIB)/libopencv_core.2.4.3.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(OPENCV_PACKAGE)
	tar xvjf $(WEBOTS_DEPENDENCY_PATH)/$(OPENCV_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(OPENCV_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENCV_PACKAGE)
	wget $(DEPENDENCIES_URL_DEVELOP)/$(OPENCV_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(OPENCV_PACKAGE)


openssl-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2 $(WEBOTS_HOME_LIB)/libcrypto* $(WEBOTS_HOME_LIB)/libssl*

openssl: $(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib

$(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib: $(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2
	cp $(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2/lib*dylib $(WEBOTS_HOME_LIB)
	install_name_tool -id @rpath/lib/webots/libcrypto.dylib $(WEBOTS_HOME_LIB)/libcrypto.dylib
	install_name_tool -id @rpath/lib/webots/libcrypto.1.0.0.dylib $(WEBOTS_HOME_LIB)/libcrypto.1.0.0.dylib
	install_name_tool -id @rpath/lib/webots/libssl.dylib $(WEBOTS_HOME_LIB)/libssl.dylib
	install_name_tool -change /usr/local/ssl/lib/webots/libcrypto.1.0.0.dylib @rpath/lib/webots/libcrypto.1.0.0.dylib $(WEBOTS_HOME_LIB)/libssl.dylib
	install_name_tool -id @rpath/lib/webots/libssl.dylib $(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib
	install_name_tool -change /usr/local/ssl/lib/webots/libcrypto.1.0.0.dylib @rpath/lib/webots/libcrypto.1.0.0.dylib $(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib

$(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2:
	cd $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENSSL_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(OPENSSL_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar jxfm $(OPENSSL_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENSSL_PACKAGE)


pico-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE) $(WEBOTS_HOME)/include/libpico $(WEBOTS_HOME_LIB)/libpico.dylib $(WEBOTS_HOME)/resources/pico

pico: $(WEBOTS_HOME_LIB)/libpico.dylib

$(WEBOTS_HOME_LIB)/libpico.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
	tar xvjfm $(PICO_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
	wget $(DEPENDENCIES_URL_DEVELOP)/$(PICO_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)


png-clean:
	rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(PNG_PACKAGE) $(WEBOTS_DEPENDENCY_PATH)/libpng-1.0.12

png: $(WEBOTS_DEPENDENCY_PATH)/libpng-1.0.12/libpng.a

$(WEBOTS_DEPENDENCY_PATH)/libpng-1.0.12/libpng.a: $(WEBOTS_DEPENDENCY_PATH)/$(PNG_PACKAGE)
	tar jxfm $(PNG_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)

$(WEBOTS_DEPENDENCY_PATH)/$(PNG_PACKAGE):
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(PNG_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(PNG_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	touch $(WEBOTS_DEPENDENCY_PATH)/$(PNG_PACKAGE)


tiff-clean:
	rm -rf $(WEBOTS_HOME)/include/libtiff $(WEBOTS_DEPENDENCY_PATH)/libtiff

tiff: $(WEBOTS_HOME)/include/libtiff/tiff.h

$(WEBOTS_HOME)/include/libtiff/tiff.h: $(WEBOTS_DEPENDENCY_PATH)/libtiff
	mkdir -p $(WEBOTS_HOME)/include/libtiff
	cp $(WEBOTS_DEPENDENCY_PATH)/libtiff/libtiff/*.h $(WEBOTS_HOME)/include/libtiff

$(WEBOTS_DEPENDENCY_PATH)/libtiff:
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(TIFF_PACKAGE)
	wget $(DEPENDENCIES_URL)/$(TIFF_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	tar xvjfm $(TIFF_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	rm -f $(WEBOTS_DEPENDENCY_PATH)/$(TIFF_PACKAGE)
